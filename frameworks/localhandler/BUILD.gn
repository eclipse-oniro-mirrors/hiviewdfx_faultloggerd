# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/faultloggerd/faultloggerd.gni")

dfx_local_handler_sources = [
  "dfx_crash_local_handler.cpp",
  "dfx_signal_local_handler.cpp",
]

if (!defined(ohos_lite)) {
  config("dfx_local_handler_config") {
    visibility = [ "*:*" ]
    defines = [ "DFX_LOG_HILOG_BASE" ]
    include_dirs = [
      "include",
      "$faultloggerd_interfaces_path/common",
      "$faultloggerd_path/common/cutil",
      "$faultloggerd_path/common/dfxlog",
      "$faultloggerd_interfaces_path/innerkits/unwinder",
      "$faultloggerd_interfaces_path/innerkits/signal_handler/include",
    ]
  }
  ohos_source_set("dfx_local_handler_src") {
    public_configs = [
      ":dfx_local_handler_config",
      "$faultloggerd_frameworks_path/allocator:dfx_allocator_config",
    ]
    sources = dfx_local_handler_sources
    sources += [ "$faultloggerd_interfaces_path/innerkits/signal_handler/dfx_signalhandler_exception.c" ]
    deps = [
      "$faultloggerd_common_path/cutil:dfx_cutil",
      "$faultloggerd_frameworks_path/allocator:dfx_allocator_src",
      "$faultloggerd_interfaces_path/innerkits/faultloggerd_client:libfaultloggerd",
      "$faultloggerd_interfaces_path/innerkits/unwinder:libunwinder",
      "$faultloggerd_path/common/dfxlog:dfx_hilog_base",
    ]

    external_deps = [
      "c_utils:utils",
      "hilog:libhilog_base",
    ]
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }
}
