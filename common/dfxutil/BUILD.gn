# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/faultloggerd/faultloggerd.gni")

dfx_util_sources = [ "dfx_util.cpp" ]

if (defined(ohos_lite)) {
  static_library("dfx_util") {
    visibility = [ "*:*" ]
    include_dirs = [
      ".",
      "$faultloggerd_interfaces_path/common",
      "$hilog_lite_include_path",
    ]
    defines = [ "is_ohos_lite" ]
    sources = dfx_util_sources
    deps = [
      "$faultloggerd_path/common/dfxlog:dfx_hilog",
      "$hilog_lite_deps_path",
      "//third_party/bounds_checking_function:libsec_shared",
    ]
  }
} else {
  config("dfx_util_config") {
    visibility = [ ":*" ]
    include_dirs = [
      ".",
      "$faultloggerd_common_path/dfxlog",
      "$faultloggerd_interfaces_path/common",
    ]
    defines = [
      "is_ohos=${is_ohos}",
      "is_linux=${is_linux}",
      "is_mingw=${is_mingw}",
    ]
    if (is_linux || is_mingw) {
      defines += [ "is_host" ]
    }
  }

  ohos_static_library("dfx_util") {
    sources = dfx_util_sources
    public_configs = [ ":dfx_util_config" ]
    deps = [ "$faultloggerd_path/common/dfxlog:dfx_hilog" ]
    external_deps = [
      "c_utils:utils",
      "hilog:libhilog",
    ]
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }

  ohos_static_library("dfx_util_static") {
    sources = dfx_util_sources
    public_configs = [ ":dfx_util_config" ]
    defines = [ "DFX_LOG_HILOG_BASE" ]
    deps = [ "$faultloggerd_path/common/dfxlog:dfx_hilog_base" ]
    external_deps = [
      "c_utils:utils",
      "hilog:libhilog_base",
    ]
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }

  ohos_static_library("dfx_util_host") {
    sources = dfx_util_sources
    public_configs = [ ":dfx_util_config" ]
    defines = [ "DFX_NO_PRINT_LOG" ]
    if (is_ohos) {
      external_deps = [
        "c_utils:utils",
        "hilog:libhilog",
      ]
    }
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }
}
