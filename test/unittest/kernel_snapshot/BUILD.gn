# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/faultloggerd/faultloggerd.gni")

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//build/lite/config/test.gni")

  group("unittest") {
    deps = []
  }
} else {
  import("//build/config/features.gni")
  import("//build/test.gni")

  module_output_path = "faultloggerd/kernel_snapshot"

  ohos_unittest("test_kernel_snapshot") {
    module_out_path = module_output_path

    visibility = [ "*:*" ]

    include_dirs = [
      ".",
      "$faultloggerd_path/services",
      "$faultloggerd_path/services/snapshot",
      "$faultloggerd_path/test/utils",
      "$faultloggerd_interfaces_path/common",
      "$faultloggerd_path/common/dfxlog",
    ]

    sources = [
      "$faultloggerd_path/services/snapshot/kernel_snapshot_kernel_frame.cpp",
      "$faultloggerd_path/services/snapshot/kernel_snapshot_manager.cpp",
      "$faultloggerd_path/services/snapshot/kernel_snapshot_parser.cpp",
      "$faultloggerd_path/services/snapshot/kernel_snapshot_printer.cpp",
      "$faultloggerd_path/services/snapshot/kernel_snapshot_processor_impl.cpp",
      "$faultloggerd_path/services/snapshot/kernel_snapshot_reporter.cpp",
      "$faultloggerd_path/services/snapshot/kernel_snapshot_util.cpp",
      "kernel_snapshot_test.cpp",
    ]
    cflags_cc = [ "-Dprivate=public" ]

    deps = [
      "$faultloggerd_path/common/dfxutil:dfx_util",
      "$faultloggerd_path/test/utils:dfx_test_util",
    ]

    external_deps = [
      "c_utils:utils",
      "googletest:gtest_main",
      "hilog:libhilog",
      "hisysevent:libhisysevent",
      "init:libbegetutil",
    ]

    resource_config_file = "$faultloggerd_path/test/resource/ohos_test.xml"
  }

  group("unittest") {
    testonly = true
    deps = [ ":test_kernel_snapshot" ]
  }
}
