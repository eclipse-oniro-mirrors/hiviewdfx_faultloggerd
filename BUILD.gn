# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/faultloggerd/faultloggerd.gni")
group("faultloggerd_targets") {
  deps = [
    "interfaces/innerkits/crash_exception:crash_exception",
    "interfaces/innerkits/dump_catcher:libdfx_dumpcatcher",
    "interfaces/innerkits/faultloggerd_client:libfaultloggerd",
    "interfaces/innerkits/signal_handler:dfx_signalhandler",
    "services:faultloggerd",
    "tools/process_dump:processdump",
  ]
  if (!defined(ohos_lite)) {
    deps += [
      "interfaces/innerkits/backtrace:libbacktrace_local",
      "interfaces/innerkits/formatter:libjson_stack_formatter",
      "interfaces/innerkits/unwinder:libunwinder",
      "interfaces/rust:faultloggerd_rust",
      "tools/dump_catcher:dumpcatcher",
    ]
    if (faultloggerd_hisysevent_enable) {
      deps += [ "tools/crash_validator:crash_validator" ]
    }
  }
}

group("faultloggerd_tests") {
  deps = [
    "test:faultloggerd_moduletest",
    "test:faultloggerd_systemtest",
    "test:faultloggerd_unittest",
    "tools/crasher_c:crasher_c",
    "tools/crasher_cpp:crasher_cpp",
  ]
  if (!defined(ohos_lite)) {
    testonly = true
    deps += [
      "example:dumpcatcherdemo",
      "test:faultloggerd_benchmarktest",
      "test:faultloggerd_funchook",
      "test:faultloggerd_fuzzertest",
      "test:faultloggerd_performancetest",
      "tools/panic_maker:panic_maker",
    ]
  }
}
